###################################################
#
# FSAL parameters.
#
# To use the default value for a parameter,
# just comment the associated line.
#
###################################################

FSAL
{

  # logging level (NIV_FULL_DEBUG, NIV_DEBUG,
  # NIV_EVNMT, NIV_CRIT, NIV_MAJ, NIV_NULL)
  #DebugLevel = "NIV_FULL_DEBUG" ;

  # Logging file
  #Options: "/var/log/nfs-ganesha.log" or some other file path
  #         "SYSLOG" prints to syslog
  #         "STDERR" prints stderr messages to the console that
  #                  started the ganesha process
  #         "STDOUT" prints stdout messages to the console that
  #                  started the ganesha process
  #LogFile = "SYSLOG";

  # maximum number of simultaneous calls
  # to the filesystem.
  # ( 0 = no limit ).
  max_FS_calls = 0;


}


###################################################
#
# FileSystem common parameters.
#
# To use the default value for a parameter,
# just comment the associated line.
#
###################################################

FileSystem
{

  #MaxRead = 1000000 ;         # Max read size from FS
  #MaxWrite = 1000000 ;        # Max write size to FS

  # If set, this mask is applied on the mode of created objects.
  #Umask = 0002 ;
  Umask = 0000 ;

  # Setting one of those values to 0
  # will deactivate the associated feature :

  Link_support = FALSE;    # hardlink support
  Symlink_support = TRUE;  # symlinks support
  CanSetTime = TRUE;       # Is it possible to change file times

  # This indicates whether it is allowed to cross
  # a junction in a "LookupPath" (used for export entries).
  #auth_xdev_export = TRUE;

  # defines access mask for extended attributes
  xattr_access_rights = 0600;
}


###################################################
#
# ProtecTIER filesystem configuration.
#
###################################################

PTFS
{
}


###################################################
#
# Cache_Inode Hash Parameter
#
###################################################

CacheInode_Hash
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 37 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;
}

###################################################
#
# Cache_Inode Client Parameter
#
###################################################

CacheInode_Client
{
    # cache inode debug level
    #DebugLevel = NIV_EVENT;
    #DebugLevel = NIV_FULL_DEBUG;

    # cache inode log file
    #LogFile = "SYSLOG";

    #Number of use of the LRU list before garbagging it
    #LRU_Nb_Call_Gc_invalid = 100 ;

    # Time after which attributes should be renewed
    # A value of 0 will disable this feature
    Attr_Expiration_Time = Immediate ;
    #Attr_Expiration_Time = 120 ; //Hin swapped with above

    # Time after which symbolic links should be renewed
    # A value of 0 will disable this feature
    #Symlink_Expiration_Time = Immediate ;
    Symlink_Expiration_Time = 600 ;

    # Time after which directory content should be renewed
    # A value of 0 will disable this feature
    #Directory_Expiration_Time = Immediate ;
    Directory_Expiration_Time = 120 ;

    # This flag tells if 'access' operation are to be performed
    # explicitely on the FileSystem or only on cached attributes information
    Use_Test_Access = 1 ;

    # Number of opened files  (take care of tcp connections...)
    #Max_Fd = 128 ;

    # Open file retention (in seconds)
    #OpenFile_Retention = 5 ;

    # flag used to enable/disable this feature
    #Use_OpenClose_cache = YES ;

}

###################################################
#
# Cache_Inode Garbagge collection policy
#
###################################################

CacheInode_GC_Policy
{

    Cache_FDs = FALSE ;

    # GC High Water Mark
    #NbEntries_HighWater = 10000 ;

    # GC Low Water Mark
    #NbEntries_LowWater = 9000 ;

    # Runtime interval (in seconds)
    #Runtime_Interval = 360 ;

    FD_HWMark_Percent = 10;
    FD_LWMark_Percent =  5;
}

###################################################
#
#  NFS_Worker_Param
#
###################################################

NFS_Worker_Param
{
	# Number of job before GC on the worker's job pool size
	Nb_Before_GC = 101  ;


}

###################################################
#
#  NFS_Worker_Param
#
###################################################

NFS_Core_Param
{
	# Number of worker threads to be used
	Nb_Worker = 1 ;

	# NFS Port to be used
	# Default value is 2049
	NFS_Port = 2049 ;

	# Mount port to be used
	# Default is 0 (let the system use an available ephemeral port)
	#MNT_Port = 0 ;
        MNT_Port = 32767 ;
        NLM_Port = 32769 ;
	# NFS RPC Program number
	# Default value is 100003
	#NFS_Program = 100003 ;

	# Mount protocol RPC Program Number
	# Default value is 100005
	#MNT_Program = 100005 ;

        # Bind to only a single address
        # Bind_Addr = "192.168.1.1" ;

	# Expiration for an entry in the duplicate request cache
	DupReq_Expiration = 2 ;

	# Size to be used for the core dump file (if the daemon crashes)
        ##Core_Dump_Size = 0 ;

        # Maximum Number of open fds
        # #Nb_Max_Fd = -1 ; #-1 is the default value

	# The path for the stats file
        Stats_File_Path = "/pt_work/statistics/ganesha/ganesha.stats" ;

	# The delay for producing stats (in seconds)
	Stats_Update_Delay = 600 ;

	# The size of each RPC send buffer in bytes and effectively the maximum send size.
        MaxRPCSendBufferSize = 32768 ;

	# The size of each RPC receive buffer in bytes and effectively the maximum receive size.
        MaxRPCRecvBufferSize = 32768 ;
        NFS_Protocols="3,4";

        Stats_Per_Client_Directory = "/pt_work/statistics/ganesha/";
        Dump_Stats_Per_Client = TRUE;
}

###################################################
#
# Duplicate Request Hash Parameter
#
###################################################

NFS_DupReq_Hash
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

}

###################################################
#
# IP/Name cache paramters
#
###################################################

NFS_IP_Name
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

    # Expiration time for this cache
    Expiration_Time = 3600 ;
}



###################################################
#
# External admin SNMP
#
###################################################
SNMP_ADM
{
	snmp_agentx_socket = "tcp:localhost:761";
	product_id = 2;
	snmp_adm_log = "/tmp/snmp_adm.log";

    export_cache_stats    = TRUE;
    export_requests_stats = TRUE;
    export_maps_stats     = FALSE;
    export_buddy_stats    = TRUE;

    export_nfs_calls_detail = FALSE;
    #export_cache_inode_calls_detail = FALSE;
    export_fsal_calls_detail = FALSE;

}

NFSv4_ClientId_Cache
{
    # Size of the array used in the hash (must be a prime number for algorithm efficiency)
    Index_Size = 17 ;

    # Number of signs in the alphabet used to write the keys
    Alphabet_Length = 10 ;

}

###################################################
#
# Statistics Exporter Thread
#
###################################################

STAT_EXPORTER
{
    Access = "localhost";
    Port = "10401";
}


###################################################
#
# NFSv4 Specific configuration stuff
#
###################################################
NFSv4
{
    # Lifetime for NFSv4 Leases
    Lease_Lifetime = 120 ;

    # Are we using volatile fh ?
    FH_Expire = FALSE ;

    # Should we return NFS4ERR_FH_EXPIRED if a FH is expired ?
    Returns_ERR_FH_EXPIRED = TRUE ;
}

###################################################
#
# Kerberos parameters for use with RPCSEC_GSS
#
###################################################
NFS_KRB5
{
    # Principal to be used
    # Default is nfs
    #PrincipalName = nfs ;

    # Keytab Path
    # Default is /etc/krb5.keytab
    #KeytabPath = /etc/krb5.keytab ;

    # TRUE = krb5 support enabled
    # Default is TRUE
    #Active_krb5 = TRUE ;

}

###################################################
#     Export entries
###################################################


# First export entry

EXPORT
{
  # Export Id (mandatory)
  Export_Id = 77 ;
  
  # Exported path (mandatory)
  Path = "/";
 
  # ProtecTIER uses FS_Specific to specify its Export ID
  FS_specific = "281474976710656";

  # Grant root access to thoses nodes, networks and @netgroups
  # - A hostname can contain wildcards (*?).
  # - Coma separated list.
  # Ex: Root_Access = "Machine1,Machine2,NetworkA,@netgroupX";
  
  Root_Access = "*";
  
  # Provide access to thoses nodes, networks and @netgroups
  # - A hostname can contain wildcards (*?).
  # - Coma separated list.
  # Ex: RW_Access = "Machine3,Machine10*,NetworkB,@netgroupY";

  # READ WRITE Access  
  RW_Access = "*";

  # READ Access  
  #  R_Access = "*";

  # Metadata only READ WRITE Access  
  #  MDONLY_Access = "*";

  # Metadata only READ Access  
  #  MDONLY_RO_Access = "*";
  
  # Pseudo path for NFSv4 export (mandatory)
  Pseudo = "/";
  
  # The anonymous uid/gid (default: -2) for root when its host doesn't have
  # a root_access and for nonroot users when Make_All_Users_Anonymous = TRUE 
  Anonymous_uid = -2 ;
  Anonymous_gid = -2 ;
  Make_All_Users_Anonymous = FALSE;
   
  ## Bit masks options ##
  
  # mask off setuid bit (default: FALSE)
  #NOSUID = TRUE;
  
  # mask off setgid bit (default: FALSE)
  #NOSGID = FALSE;
    
  # NFS protocols that can be used for accessing this export. (default: 2,3,4)
  NFS_Protocols = "3" ;
  
  # Transport layer that can be used for accessing this export. (default: UDP,TCP)
  Transport_Protocols = "UDP,TCP" ;
  
  # List of supported RPC_SEC_GSS authentication flavors for this export.
  # It can be a coma-separated list of the following values: sys, krb5i, krb5p.
  # (default: "sys")
  SecType = "sys,krb5,krb5i,krb5p";
  
  # The following parameters are pre-setted depending on
  # the filesystem configuration. However, the default values
  # can be overridden with the following export settings :
  
  # Maximum size for a read operation.
  MaxRead = 524288;
  
  # Maximum size for a write operation.
  MaxWrite = 524288;
  
  # Prefered size for a read operation.
  #PrefRead = 16384;
  
  # Prefered size for a write operation.
  #PrefWrite = 16384;
  
  # Prefered size for a readdir operation.
  # PrefReaddir = 0;

  # Filesystem ID (default  666.666)
  # This sets the filesystem id for the entries of this export.
  Filesystem_id = 192.168 ;
 
  # Should the client to this export entry come from a privileged port ?	
  #PrivilegedPort = FALSE ;

  # Is File content cache enbled for this export entry 
  Cache_Data =  FALSE;
  
  # Export entry "tag" name
  # Can be used as an alternative way of addressing the
  # export entry at mount time ( alternate to the 'Path')
  Tag = "pt0";

  # Should we allow for unstable writes that require either a COMMIT
  # request to write to disk or a file opened with O_SYNC
  Use_NFS_Commit = TRUE;
  
  # Should we use a buffer for unstable writes that resides in userspace
  # memory that Ganesha manages.
  Use_Ganesha_Write_Buffer = FALSE;

  Use_FSAL_UP = TRUE;
  FSAL_UP_Type = "DUMB";
  # FSAL_UP_Timeout = 30
}
